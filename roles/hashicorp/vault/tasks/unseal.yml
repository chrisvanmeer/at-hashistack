---
- name: Retrieve Initial Root Token from local file.
  ansible.builtin.shell: "awk '/Initial Root Token/ {print $4}' {{ vault_bootstrap_init_local_path }}"
  register: vault_initial_root_token
  changed_when: false
  delegate_to: localhost
  become: false
  run_once: true
  tags: unseal

- name: Check the Vault sealed status.
  ansible.builtin.shell: "{{ vault_binary }} status | grep -i sealed | awk '{print $2}'"
  environment:
    VAULT_TOKEN: "{{ vault_initial_root_token.stdout }}"
    VAULT_ADDR: "{{ vault_address }}"
    VAULT_CACERT: "{{ vault_ssl_ca_dest }}"
    VAULT_SKIP_VERIFY: "true"
  changed_when: false
  register: vault_is_sealed
  tags: unseal

- name: Unseal
  block:
    - name: Unseal - Retrieve local token file.
      ansible.builtin.set_fact:
        token_file_output: "{{ lookup('file', vault_bootstrap_init_local_path).split('\n') }}"
      delegate_to: localhost
      run_once: true

    - name: Unseal - Retrieve first unseal key from initialization info.
      ansible.builtin.set_fact:
        vault_unseal_key_1: "{{ token_file_output[0].split('Unseal Key 1: ')[1] }}"
      delegate_to: localhost
      run_once: true

    - name: Unseal - Retrieve second unseal key from initialization info.
      ansible.builtin.set_fact:
        vault_unseal_key_2: "{{ token_file_output[1].split('Unseal Key 2: ')[1] }}"
      delegate_to: localhost
      run_once: true

    - name: Unseal - Retrieve third unseal key from initialization info.
      ansible.builtin.set_fact:
        vault_unseal_key_3: "{{ token_file_output[2].split('Unseal Key 3: ')[1] }}"
      delegate_to: localhost
      run_once: true

    - name: Ensure the Vault is unsealed.
      ansible.builtin.command: "{{ vault_binary }} operator unseal {{ item }}"
      environment:
        VAULT_ADDR: "{{ vault_address }}"
        VAULT_CACERT: "{{ vault_ssl_ca_dest }}"
        VAULT_SKIP_VERIFY: "true"
      with_items:
        - "{{ vault_unseal_key_1 }}"
        - "{{ vault_unseal_key_2 }}"
        - "{{ vault_unseal_key_3 }}"
  when:
    - vault_is_sealed.stdout == "true"
  tags: unseal
