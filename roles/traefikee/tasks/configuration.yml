---
- name: Configuration
  tags: configuration
  delegate_to: localhost
  run_once: true
  block:
    - name: Ensure static configuration on management station
      ansible.builtin.template:
        src: traefikee-config-static.yml.j2
        dest: "/home/{{ ansible_env.SUDO_USER }}/traefikee-config-static.yml"
        mode: 0644
      delegate_to: localhost
      become: false

    - name: Ensure dynamic configuration on management station
      ansible.builtin.copy:
        src: traefikee-config-dynamic.yml
        dest: "/home/{{ ansible_env.SUDO_USER }}/traefikee-config-dynamic.yml"
        mode: 0644
      delegate_to: localhost
      become: false

    - name: Create fact of Vault admin password.
      ansible.builtin.set_fact:
        admin_password: "{{ lookup('file', vault_admin_local_path) }}"
      become: false

    - name: Retrieve client token.
      ansible.builtin.uri:
        url: "{{ vault_consul_address }}/v1/auth/userpass/login/{{ vault_admin_username }}"
        method: POST
        body_format: json
        body: '{ "password": "{{ admin_password }}" }'
        status_code:
          - 200
          - 204
        validate_certs: false
      register: vault_admin_login_response

    - name: Set fact of client token.
      ansible.builtin.set_fact:
        vault_token: "{{ vault_admin_login_response.json.auth.client_token }}"

    - name: Ensure Traefikee Vault Resolver policy.
      ansible.builtin.uri:
        url: "{{ vault_consul_address }}/v1/sys/policy/{{ policy_name }}"
        headers:
          X-Vault-Token: "{{ vault_token }}"
        method: POST
        body_format: json
        body: '{ "policy": "path \"{{ vault_pki_int_path }}/issue/{{ vault_pki_int_role_name }}\" {\n capabilities = [\"create\", \"update\"]\n}" }'
        status_code:
          - 200
          - 204
        validate_certs: false
      vars:
        policy_name: traefikee-certresolver
