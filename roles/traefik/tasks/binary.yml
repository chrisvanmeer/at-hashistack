---
- name: Determine architecture - x86
  ansible.builtin.set_fact:
    traefik_architecture: "amd64"
  when: ansible_architecture == "x86_64"

- name: Determine architecture - ARM
  ansible.builtin.set_fact:
    traefik_architecture: "arm64"
  when: ansible_architecture == "arm64"

- name: Assert that the architecture is set
  ansible.builtin.assert:
    that:
      - traefik_architecture is defined
      - traefik_architecture is string
      - traefik_architecture in [ "amd64", "arm64" ]
    fail_msg: "This playbook only supports AMD64 or ARM64 deployments."

- name: Determine if traefik is installed
  ansible.builtin.stat:
    path: /usr/local/bin/traefik
  register: _traefik_traefik_binary

- name: Ensure download directory
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/_traefik_download"
    state: directory
    mode: 0755
  when: not _traefik_traefik_binary.stat.exists

- name: Ensure traefik binary
  when: not _traefik_traefik_binary.stat.exists
  block:
    - name: Download traefik
      ansible.builtin.unarchive:
        src: "https://github.com/traefik/traefik/releases/download/v{{ traefik_version }}/traefik_v{{ traefik_version }}_linux_{{ traefik_architecture }}.tar.gz"
        dest: "{{ ansible_user_dir }}/_traefik_download"
        remote_src: yes

    - name: Ensure traefik binary
      ansible.builtin.copy:
        src: "{{ ansible_user_dir }}/_traefik_download/traefik"
        dest: "/usr/local/bin/traefik"
        remote_src: true
        mode: 0755

- name: Cleanup download directory
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/_traefik_download"
    state: absent
